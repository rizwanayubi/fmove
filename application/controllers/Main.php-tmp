<?php

class Main extends CI_Controller {
	function __construct() {
		parent::__construct();
		if ($this->session->userdata('userData')) {
			$this->role               = $this->session->userdata('userData')['role'];
			$this->data['curr_login'] = $this->session->userdata('userData');
		} else {
			$this->role = 'public';
		}

		$this->load->model('Property_model');
		$this->load->model('Package_model');
		$this->load->model('Agent_model');
		$this->load->model('Agency_model');
		$this->load->model('Uk_town_model');

		$this->data['dropdown_props'] = $this->Property_model->get_all_property();
		$this->data['dropdown_agent'] = $this->Agent_model->get_all_agents();
		$this->data['defdata']        = array('all_uk_towns' => $this->Uk_town_model->get_all_uk_towns());

	}

	function index() {
		$this->load->model('Uk_town_model');
		$this->load->model('Property_model');
		$this->load->model('Prop_detail_model');
		$this->load->model('News_model');

		$homeprops = $this->Property_model->get_all_property();

		foreach ($homeprops as &$prop) {
			$prop['prop_details'] = $this->Prop_detail_model->get_prop_detail($prop['prop_id']);
		}
		$news = $this->News_model->get_all_news();

		$data = $this->data;
		$data['defdata'] += array('home_prop' => $homeprops, 'news' => $news);
		$data += array(
			'assets' => base_url()."resources/",
			'_view'  => 'frontend/views/index'
		);

		$this->load->view('frontend/layouts/main', $data);
	}

	function logout() {
		$this->session->sess_destroy();
		redirect(base_url());

	}

	function makeinquiry() {
		$input = $this->input->post();
		// print_r($input);
		$msg  = "Inquiry Generated at Favouritemove! <br><br> From: ".$input['fullname']."(".$input['email'].")<br><br>Message: ".$input['message'];
		$from = "FavouriteMove Query Manager";
		$sub  = "Favourite Move Query Notification";
		$CC   = "favouritemove@gmail.com";
		$this->sendemail($msg, $input['agemail'], $from, $CC = "", $sub);

		$this->load->model('User_model');
		$id = $this->User_model->add_inquiry($input);
		if ($id) {
			$this->session->set_flashdata('inquiry', 'true');
			redirect($SERVER['HTTP_REFERER']);
		} else {
			$this->session->set_flashdata('inquiry', 'false');
			redirect($SERVER['HTTP_REFERER']);
		}

	}

	function sendemail($msg, $to, $from, $CC = "", $sub) {
		$config = Array(
			'useragent' => 'CodeIgniter',
			'protocol'  => 'smtp',
			'smtp_host' => 'ssl://smtp.googlemail.com',
			'smtp_port' => 465,
			'smtp_user' => 'favouritemove@gmail.com', // change it to yours
			'smtp_pass' => 'FavMove123', // change it to yours
			'mailtype'  => 'html',
			'charset'   => 'iso-8859-1',
			'wordwrap'  => TRUE);

		$this->load->library('email', $config);
		$this->email->set_newline("\r\n");
		$this->email->from($from);// change it to yours
		$this->email->to($to);// change it to yours
		$this->email->CC($CC);// change it to yours
		$this->email->subject($sub);
		$this->email->message($msg);
		if ($this->email->send()) {
			return;

		} else {
			show_error($this->email->print_debugger());
		}
	}

	function properties() {
		$option = $this->input->get('o');
		$this->load->model('Property_model');
		$this->load->model('Agent_model');
		$this->load->model('Agency_model');
		$this->load->model('Prop_detail_model');
		$this->load->model('Feature_model');

		if ($option == "n") {
			$all_property = $this->Property_model->get_prop_where('new_build', '1');
		}
		if ($option == "b") {
			$all_property = $this->Property_model->get_prop_where('prop_type', 'bus');
		} else if ($option == "r") {
			$all_property = $this->Property_model->get_prop_where('prop_type', 'res');
		} else if ($option == "c") {
			$all_property = $this->Property_model->get_prop_where('prop_type', 'com');
		}
		$viewdata = array();

		foreach ($all_property as $property) {
			$viewdata[$property['prop_id']-1] = array(
				'prop_id'     => $property['prop_id'],
				'property'    => $property,
				'agentdata'   => $this->Agent_model->get_agent($property['agent_id']),
				'features'    => $this->Feature_model->get_feature($property['prop_id']),
				'prop_detail' => $this->Prop_detail_model->get_prop_detail($property['prop_id']),

			);
			$viewdata[$property['prop_id']-1] += array('agencydata' => $this->Agency_model->get_agency($viewdata[$property['prop_id']-1]['agentdata']['agency_id']));
		}
		$data = $this->data;
		$data += array(
			'assets'   => base_url()."resources/",
			'_view'    => 'frontend/views/property_list',
			'viewdata' => $viewdata

		);

		$this->load->view('frontend/layouts/main', $data);
	}
	function search() {

		if ($this->input->get('type') && $this->input->get('type') == "prop") {

			$params = $this->input->post();
			$this->load->model('Property_model');
			$properties = $this->Property_model->search_property($params);

			$viewdata = array('property' => array(), 'agentdata' => array());
			foreach ($properties as &$prop) {

				$prop['agent_id']               = $this->Agent_model->get_agent($prop['agent_id']);
				$prop['agent_id']['agencydata'] = $this->Agency_model->get_agency($prop['agent_id']['agency_id']);
			}
			// print_r($this->input->post());
			$data = $this->data;
			$data += array(
				'assets'   => base_url()."resources/",
				'_view'    => 'frontend/views/search_results',
				'viewdata' => $properties);

			$this->load->view('frontend/layouts/main', $data);

		} else if ($this->input->get('type') && $this->input->get('type') == "ag") {
			$params = $this->input->post();
			$this->load->model('Agent_model');
			$agents = $this->Agency_model->search_agent($params);

		} else {

			$all_uk_regions = $this->Uk_town_model->get_ukregions();

			// $uk_town = array();
			foreach ($all_uk_regions as &$region) {

				$region['subregions'] = $this->Uk_town_model->get_regions($region['uk_region']);
				$region['prop_count'] = 0;
				foreach ($region['subregions'] as &$region1) {
					$region1['postcodes']  = $this->Uk_town_model->get_regionpostcodes($region1['region'], $region['uk_region']);
					$region1['prop_count'] = $this->Property_model->get_propcount($region1['postcodes']);
					$region['prop_count'] += $region1['prop_count'];
				}
				// echo $region['uk_region'];
				echo "<br><br><br>";

				// echo $region['prop_count'];
				echo "<br><br><br>";

				// print_r($region['subregions']);
				echo "<br><br><br>";

				// print_r($region);
				//  echo "<br><br><br>";

			}

			$viewdata['all_regions'] = $all_uk_regions;
			$data                    = $this->data;
			$data += array(
				'viewdata' => $viewdata,
				'assets'   => base_url()."resources/",
				'_view'    => 'frontend/views/search_page');

			$this->load->view('frontend/layouts/main', $data);
		}
	}

	function prop_detail() {
		$id = $this->input->get('id');
		$this->load->model('Property_model');
		$this->load->model('Agent_model');
		$this->load->model('Agency_model');
		$this->load->model('Prop_detail_model');
		$this->load->model('Feature_model');

		$property = $this->Property_model->get_property($id);
		$viewdata = array(
			'prop_id'     => $property['prop_id'],
			'property'    => $property,
			'agentdata'   => $this->Agent_model->get_agent($property['agent_id']),
			'features'    => $this->Feature_model->get_feature($property['prop_id']),
			'prop_detail' => $this->Prop_detail_model->get_prop_detail($property['prop_id'])
		);
		$viewdata += array(
			'agency' => $this->Agency_model->get_agency($viewdata['agentdata']['agency_id'])
		);

		$data = $this->data;
		$data += array(
			'assets'   => base_url()."resources/",
			'_view'    => 'frontend/views/propdet2',
			'viewdata' => $viewdata);

		$this->load->view('frontend/layouts/main', $data);

	}

	function news() {
		$this->load->model('News_model');
		$news             = $this->News_model->get_all_news();
		$viewdata['news'] = $news;
		$data             = $this->data;
		$data += array(
			'assets'   => base_url()."resources/",
			'_view'    => 'frontend/views/news_list',
			'viewdata' => $viewdata);

		$this->load->view('frontend/layouts/main', $data);
	}

	function contact_us() {
		$data = $this->data;
		$data += array(
			'assets' => base_url()."resources/",
			'_view'  => 'frontend/views/contactus'
		);

		$this->load->view('frontend/layouts/main', $data);

	}

	function contact_submit() {
		$data = $this->input->post();

		$msg  = $data['msg'];
		$to   = "favouritemove@gmail.com";
		$from = "admin@favmove.com";
		$CC   = "";
		$sub  = "Contact from Favourite Move";

		if ($this->sendemail($msg, $to, $from, $CC, $sub)) {
			redirect('/');
		} else {
			show_error('Error');
		}

	}

	// function subscribe()
	// {
	//     $params = $this->input->post();
	//     $this->load->model('User_model');
	//     $email = $this->input->post('email');
	//     $msg = " You have subscribed to Favourite Move for updates! Stay Tuned! :D ";
	//     $sub = "Favourite Move Subscription";
	//     $from = "admin@favouritemove.com";
	//     $this->User_model->Subscribe($params);
	//     $this->sendemail($msg, $email, $from,'', $sub);
	//     redirect('/');

	// }

	function subscribe() {
		$params = $this->input->post();
		$this->load->model('User_model');
		$email = $this->input->post('email');
		$msg   = " You have subscribed to Favourite Move for updates! Stay Tuned! :D ";
		$sub   = "Favourite Move Subscription";
		$CC    = "";
		$from  = "admin@favouritemove.com";
		$this->User_model->Subscribe($params);
		if ($this->sendemail($msg, $email, $from, $CC, $sub)) {
			$this->session->set_flashdata('successsub', "<script>alert('Sent!')</script>");
			return;
		};

	}

	function news_detail() {
		$this->load->model('News_model');
		$id               = $this->input->get('id');
		$news             = $this->News_model->get_news($id);
		$viewdata['news'] = $news;
		$data             = $this->data;
		$data += array(
			'assets'   => base_url()."resources/",
			'_view'    => 'frontend/views/news_detail',
			'viewdata' => $viewdata);

		$this->load->view('frontend/layouts/main', $data);
	}

	function aboutus() {
		$viewdata = array();
		$data     = $this->data;
		$data += array(
			'assets'   => base_url()."resources/",
			'_view'    => 'frontend/views/aboutus',
			'viewdata' => $viewdata);
		$this->load->view('frontend/layouts/main', $data);
	}

	function agents()//Done
	{
		if ($this->input->get('s') == '1') {
			$this->load->model('Uk_town_model');
			$viewdata = array();
			$data     = $this->data;
			$data += array(
				'assets'   => base_url()."resources/",
				'_view'    => 'frontend/views/agent_search',
				'viewdata' => $viewdata);
			$this->load->view('frontend/layouts/main', $data);

		} else if ($this->input->get('l') == '1') {
			$this->load->model('Agent_model');
			$this->load->model('Agency_model');

			$viewdata = array();
			$agents   = $this->Agent_model->get_all_agents();

			foreach ($agents as $agent) {

				$viewdata[$agent['id']-1] = array(
					'id'     => $agent['id'],
					'agent'  => $agent,
					'agency' => $this->Agency_model->get_agency($agent['agency_id'])
				);
			}
			$data = $this->data;
			$data += array(
				'assets'   => base_url()."resources/",
				'_view'    => 'frontend/views/agent_list',
				'viewdata' => $viewdata);
			$this->load->view('frontend/layouts/main', $data);
		}
	}

	function agent_detail()//Add view and link
	{

		$this->load->model('Agent_model');
		$this->load->model('Agency_model');
		$this->load->model('Property_model');
		$this->load->model('Prop_detail_model');
		$id         = $this->input->get('id');
		$agent      = $this->Agent_model->get_agent($id);
		$agency     = $this->Agency_model->get_agency($agent['agency_id']);
		$properties = $this->Property_model->get_propertyag($id);
		foreach ($properties as &$property) {
			$property['prop_details'] = $this->Prop_detail_model->get_prop_detail($property['prop_id']);
		}

		$viewdata = array('agent' => $agent,
			'agency'                 => $agency, 'properties'                 => $properties);

		$data = $this->data;
		$data += array(
			'assets'   => base_url()."resources/",
			'_view'    => 'frontend/views/agent_profile',
			'viewdata' => $viewdata);
		$this->load->view('frontend/layouts/main', $data);
	}

	function uslogin() {
		if ($this->input->post()) {
			$this->load->model('User_model');
			$this->load->model('Agent_model');
			$username = $this->input->post('username');
			$password = $this->input->post('password');
			$success  = $this->User_model->login($username, $password);

			if ($success) {
				if ($success['usertype'] == 'agent') {
					$agg       = $this->Agent_model->get_agent_where('username', $success['username']);
					$agentData = array(
						'agentid'   => $username,
						'UserData'  => $success,
						'AgentData' => $agg
					);

					$data = $this->data;
					$data += array(
						'agentData' => $agentData,
						'logged_in' => true,
						'role'      => 'agent'
					);

					$sdata = array(
						'agentData' => $agentData,
						'logged_in' => true,
						'role'      => 'agent'
					);
					$this->session->set_userdata('userData', $sdata);
					redirect('agent_home');
				} else if ($success['usertype'] == 'user') {

					$userData = array(
						'userid' => $username,
						'dataa'  => $success
					);
					//print_r($userData);
					$data = $this->data;
					$data += array(
						'userData'  => $userData,
						'logged_in' => true,
						'role'      => 'user'
					);

					$this->session->set_userdata('userData', $data);
					redirect('user_home');

				}
			} else {
				show_error('Invalid Credentials');
			}

		} else {
			$viewdata['all_agency'] = $this->Agency_model->get_all_agency();
			$data                   = $this->data;
			$data += array(
				'viewdata' => $viewdata,
				'assets'   => base_url()."resources/",
				'_view'    => 'frontend/views/login'
			);
			$this->load->view('frontend/layouts/main', $data);
		}

	}

	function user_reg() {
		$this->load->library('user_agent');
		$this->load->library('form_validation');
		$this->load->model('User_model');

		$this->form_validation->set_rules('password', 'Password', 'required|max_length[255]');
		$this->form_validation->set_rules('username', 'Username', 'required|max_length[255]');
		$this->form_validation->set_rules('email', 'Email', 'required|max_length[255]|valid_email');
		$this->form_validation->set_rules('cpassword', 'Confirm Password', 'required|max_length[255]|matches[password]');

		if ($this->form_validation->run()) {
			$params = array(
				'password'        => $this->input->post('password'),
				'username'        => $this->input->post('username'),
				'email'           => $this->input->post('email'),
				'usertype'        => 'user',
				'created_on'      => date('Y-m-d h:i:s'),
				'payment_details' => json_encode(array()),
				'myfavorites'     => json_encode(array())
			);

			$user_id = $this->User_model->add_user($params);
			redirect('user_home');

		} else {
			// $data = $this->data;
			$data += array(
				'assets' => base_url()."resources/",
				'_view'  => 'frontend/views/login');
			$this->load->view('frontend/layouts/main', $data);
		}
	}

	function agent_reg() {
		$this->load->library('user_agent');
		$this->load->library('form_validation');
		$this->load->model('User_model');
		$this->form_validation->set_rules('password', 'Password', 'required|max_length[255]');
		$this->form_validation->set_rules('username', 'Username', 'required|max_length[255]');
		$this->form_validation->set_rules('fname', 'First Name', 'required|max_length[255]');
		$this->form_validation->set_rules('lname', 'Last Name', 'required|max_length[255]');
		$this->form_validation->set_rules('description', 'Description', 'required|max_length[255]');
		$this->form_validation->set_rules('address', 'Address', 'required|max_length[255]');
		$this->form_validation->set_rules('email', 'Email', 'required|max_length[255]|valid_email');
		$this->form_validation->set_rules('cpassword', 'Confirm Password', 'required|max_length[255]|matches[password]');
		$agency = array();
		if (!empty($this->input->post('agency_id'))) {
			$this->form_validation->set_rules('agency_id', 'Agency Id', 'required|max_length[255]');
			$agency_id = $this->input->post('agency_id');
			$agency    = $this->Agency_model->get_agency($agency_id);
		} else {

			$this->form_validation->set_rules('agencyname', 'Agency Name', 'required|max_length[255]');
			$this->form_validation->set_rules('fb_link', 'Facebook Link', 'xss_clean|max_length[255]');
			$this->form_validation->set_rules('twit_link', 'Twitter', 'xss_clean|max_length[255]');
			$this->form_validation->set_rules('gplus_link', 'GPlus', 'xss_clean|max_length[255]');
			$this->form_validation->set_rules('li_link', 'LinkedIn', 'xss_clean|max_length[255]');
			$this->form_validation->set_rules('you_link', 'Youtube', 'xss_clean|max_length[255]');
			$this->form_validation->set_rules('pin_link', 'Pinterest', 'xss_clean|max_length[255]');
			$this->form_validation->set_rules('insta_link', 'Insta', 'xss_clean|max_length[255]');

			$agency = array(

				'name'          => $this->input->post('agencyname'),
				'agency_logo'   => $_FILES['agencylogo']['name'],
				'fb_link'       => $this->input->post('fb_link'),
				'linkedin_link' => $this->input->post('li_link'),
				'gplus_link'    => $this->input->post('gplus_link'),
				'youtube_link'  => $this->input->post('you_link'),
				'pin_link'      => $this->input->post('pin_link'),
				'insta_link'    => $this->input->post('insta_link'),
				'address'       => $this->input->post('ag_address'),
				'phone'         => $this->input->post('ag_phone')

			);

		}

		if ($this->form_validation->run()) {
			$user = array(
				'password'        => $this->input->post('password'),
				'username'        => $this->input->post('username'),
				'email'           => $this->input->post('email'),
				'usertype'        => 'agent',
				'created_on'      => date('Y-m-d h:i:s'),
				'payment_details' => json_encode(array()),
				'myfavorites'     => json_encode(array())
			);

			$agent = array(
				'package_id'  => "",
				'agency_id'   => "",
				'password'    => $this->input->post('password'),
				'name'        => $this->input->post('fname')." ".$this->input->post('lname'),
				'username'    => $this->input->post('username'),
				'email'       => $this->input->post('email'),
				'agent_image' => $_FILES['agentimg']['name'],
				// 'agent_image' => $_FILES['agentimg'],
				'property_list'       => json_encode(array()),
				'last_logintime'      => '',
				'added_date'          => date('Y-m-d h:i:s'),
				'address'             => $this->input->post('address'),
				'activated'           => 0,
				'package_lastpayment' => "",
				'last_editip'         => $this->input->ip_address(),
				'payment_details'     => json_encode(array()),
				'description'         => $this->input->post('description'),
				'phone'               => $agency['phone']

			);

			$formData['ag_su'] = array('agent' => $agent, 'agency' => $agency, 'user' => $user);
			$this->session->set_userdata('formData', $formData);

			$this->selectpackage($agency, $agent, $user);

		} else {

			echo "<script>alert('".validation_errors('<div class=\"error\">', '</div>')."');</script>";

			$viewdata['all_agency'] = $this->Agency_model->get_all_agency();

			$data = $this->data;
			$data += array(
				'viewdata' => $viewdata,
				'assets'   => base_url()."resources/",
				'_view'    => 'frontend/views/login');
			$this->load->view('frontend/layouts/main', $data);
		}

	}

	function selectpackage($agency, $agent, $user) {
		$formData = array(
			'agency' => $agency,
			'agent'  => $agent,
			'user'   => $user);
		$this->session->set_userdata('agformData', $formData);
		$viewdata['packages'] = $this->Package_model->get_all_packages();
		$data                 = $this->data;
		$data += array(
			'viewdata' => $viewdata,
			'assets'   => base_url()."resources/",
			'_view'    => 'frontend/views/selectpackage');
		$this->load->view('frontend/layouts/main', $data);

	}

	function paymenttt($data, $pkg) {
		return true;//PAYPAL Calls
	}

	function makepayments() {

		$this->load->model('User_model');
		$agData = $this->session->userdata('agformData');
		$id     = $this->input->post('package');

		$package = $this->Package_model->get_package($id);
		if ($this->paymenttt($agData, $package)) {

			$agData['agent']['package_id']          = $id;
			$agData['agent']['activated']           = 1;
			$agData['agent']['package_lastpayment'] = date('Y-m-d h:i:s', strtotime('now'));

			$agData['agent']['payment_details'] = $agData['user']['payment_details'] = json_encode(array());//Payment Array

			// $viewdata = array(
			// 'agency'=> $agData['agency'],
			// 'agent'=> $agData['agent'],
			// 'user'=> $agData['user']);

			//         Array ( [id] => 1 [name] => Mavericks [property_list] => [agency_logo] => [fb_link] => [linkedin_link] => [twit_link] => [gplus_link] => [youtube_link] => [insta_link] => [pin_link] => [address] => asdas123 asdasj [created_on] => 2017-10-01 21:56:46 [phone] => +44 18232 123849 )
			// Agency

			// Array ( [package_id] => 2 [agency_id] => [password] => 123456 [name] => Hamza Ahmad [username] => root [email] => hamza@gmail.com [agent_image] => agent3.jpg [property_list] => [] [last_logintime] => [added_date] => 2017-10-21 07:42:25 [address] => 349A G2 Wapda Town [activated] => 0 [package_lastpayment] => [last_editip] => ::1 [payment_details] => [] [description] => aszxvzxvxzvzxvzxvzxvzxv )
			// Agent ^

			// Array ( [password] => 123456 [username] => root [email] => hamza@gmail.com [usertype] => agent [created_on] => 2017-10-21 07:42:25 [payment_details] => [] [myfavorites] => [] )
			// User ^

			if (isset($agData['agency']['id'])) {
				$agData['agent']['agency_id'] = $agData['agency']['id'];
			} else {
				$agency_id                    = $this->Agency_model->add_agency($agData['agency']);
				$agData['agent']['agency_id'] = $agency_id;
			}

			$agid = $this->Agent_model->add_agent($agData['agent']);
			$usid = $this->User_model->add_user($agData['user']);

			redirect('user_login');

		} else {
			redirect('');
		}

	}

	function adlogin() {
		$this->load->model('Admin_model');
		$username = $this->input->post('username');
		$password = $this->input->post('password');
		$success  = $this->Admin_model->login($username, $password);
		if ($success) {
			$adminData = array(
				'adminid' => $username,
				'email'   => $success['0']['email']
			);
			//print_r($adminData);
			$data = $this->data;
			$data += array(
				'adminData' => $adminData,
				'logged_in' => true,
				'role'      => 'su'
			);
			$this->session->set_userdata('sess_dat', $data);
			redirect('admin');
		} else {
			echo "error";
		}
	}

}