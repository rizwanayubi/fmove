<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class User_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    


    /*
     * Get user by userid
     */
    function get_user($userid)
    {
        return $this->db->get_where('user',array('userid'=>$userid))->row_array();
    }
        
    /*
     * Get all user
     */
    function get_all_user()
    {
        $this->db->order_by('userid', 'desc');
        return $this->db->get('user')->result_array();
    }
        
    /*
     * function to add new user
     */
    function add_user($params)
    {
        $this->db->insert('user',$params);
        return $this->db->insert_id();
    }

        function add_inquiry($params)
    {
        $this->db->insert('inquiries',$params);
        return $this->db->insert_id();
    }
     function Subscribe($params)
    {
        $this->db->insert('subscribe',$params);
        return $this->db->insert_id();
    }
    
    /*
       function to update user
     */
    function update_user($userid,$params)
    {
        $this->db->where('userid',$userid);
        return $this->db->update('user',$params);
    }
    
    /*
     * function to delete user
     */
    function delete_user($userid)
    {
        return $this->db->delete('user',array('userid'=>$userid));
    }

    function login($uid, $password) //Danish
    {

        $this -> db -> select('*');
        $this -> db -> from('user');
        $this -> db -> where('username', $uid);
        $this -> db -> where('password', $password);
        $this -> db -> limit(1);


        $query = $this->db->get();

        if($query->num_rows() == 1)
        {
           return $query->row_array();
        }
        else
        {
            return false;
        }
    }

    function getuserfav($prop_id)
    {
        return $this->db->get_where('property', array('prop_id' => $prop_id));   
    }
    function useradd($data)
    {
        return $this->db->insert('userfavprop' , $data);
    }

    function showfav($userid)
    {
        return $this->db->get_where('userfavprop', array('userid'=> $userid))->result_array();
    }
    function userupdate($userid, $data)
    {
        $this->db->where('userid', $userid);
        return  $this->db->update('user', $data); 
    }

    function check_user($user_data)
    {
        return $this->db->get_where('user' , $user_data)->num_rows();
    }
    function add_note($user_note)
    {
        $user_note = array(
            'note' => $user_note['usernote'],
          );
        $this->db->insert('user_note',$user_note);
        return $this->db->insert();
    }

    function checkpass($id)
    {
        return $this->db->get_where('user', array('userid' => $id));
    }

    function updatepass($data, $id)
    {
        $this->db->where('userid', $id);
        return  $this->db->update('user', $data); 
    }
    
    function total_members()
        {
            return $this->db->get('user')->num_rows();
        }
        
        function checkprop($propid, $userid)
        {
            return $this->db->get_where('userfavprop', array('propid'=> $propid, 'userid'=> $userid))->num_rows();
        }
}
